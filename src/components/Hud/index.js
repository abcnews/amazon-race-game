import React, { Component } from 'react';
import styles from './styles.scss';

const BAD_COLOUR = '#ed6c2d';
const MEDIUM_COLOUR = '#edcd58';
const GOOD_COLOUR = '#55bfea';
const colours = {
  bad: BAD_COLOUR,
  medium: MEDIUM_COLOUR,
  good: GOOD_COLOUR
};

const textColours = {
  bad: '#fff',
  medium: '#000',
  good: '#000'
};

function svg(rate) {
  return (
    <div className={styles.pickRates}>
      <svg xmlns="http://www.w3.org/2000/svg" width="37" height="19" viewBox="0 0 37 19">
        <g fill={rate === 'bad' ? BAD_COLOUR : '#ffffff'}>
          <path
            fillOpacity={rate === 'bad' ? '1' : '.15'}
            d="M3,0 L37,0 L37,19 L3,19 C1.34314575,19 2.02906125e-16,17.6568542 0,16 L0,3 C-2.02906125e-16,1.34314575 1.34314575,3.04359188e-16 3,0 Z"
          />
          <path
            fillOpacity={rate === 'bad' ? '0.9' : '.5'}
            fill={rate === 'bad' ? '#000000' : '#ffffff'}
            d="M12,14.4704823 C12,12.2665408 15.2165427,10.1159341 18.5,10.1159341 C21.7834573,10.1159341 25,12.2665408 25,14.4704823 L23,14.4704823 C23,14.1770751 22.5796947,13.6040728 21.8332702,13.1050073 C20.9136242,12.4901244 19.7198734,12.1159341 18.5,12.1159341 C17.2801266,12.1159341 16.0863758,12.4901244 15.1667298,13.1050073 C14.4203053,13.6040728 14,14.1770751 14,14.4704823 L12,14.4704823 Z M15.5384615,8.38461538 C14.6038258,8.38461538 13.8461538,7.62694342 13.8461538,6.69230769 C13.8461538,5.75767196 14.6038258,5 15.5384615,5 C16.4730973,5 17.2307692,5.75767196 17.2307692,6.69230769 C17.2307692,7.62694342 16.4730973,8.38461538 15.5384615,8.38461538 Z M21.4615385,8.38461538 C20.5269027,8.38461538 19.7692308,7.62694342 19.7692308,6.69230769 C19.7692308,5.75767196 20.5269027,5 21.4615385,5 C22.3961742,5 23.1538462,5.75767196 23.1538462,6.69230769 C23.1538462,7.62694342 22.3961742,8.38461538 21.4615385,8.38461538 Z"
          />
        </g>
      </svg>

      <svg xmlns="http://www.w3.org/2000/svg" width="37" height="19" viewBox="0 0 37 19">
        <g fill={rate === 'medium' ? MEDIUM_COLOUR : '#ffffff'}>
          <rect width="37" height="19" fillOpacity={rate === 'medium' ? '1' : '.15'} />
          <path
            fillOpacity={rate === 'medium' ? '0.9' : '.5'}
            fill={rate === 'medium' ? '#000000' : '#ffffff'}
            d="M12,11.7692308 L25,11.7692308 L25,13.4615385 L12,13.4615385 L12,11.7692308 Z M15.5384615,8.38461538 C14.6038258,8.38461538 13.8461538,7.62694342 13.8461538,6.69230769 C13.8461538,5.75767196 14.6038258,5 15.5384615,5 C16.4730973,5 17.2307692,5.75767196 17.2307692,6.69230769 C17.2307692,7.62694342 16.4730973,8.38461538 15.5384615,8.38461538 Z M21.4615385,8.38461538 C20.5269027,8.38461538 19.7692308,7.62694342 19.7692308,6.69230769 C19.7692308,5.75767196 20.5269027,5 21.4615385,5 C22.3961742,5 23.1538462,5.75767196 23.1538462,6.69230769 C23.1538462,7.62694342 22.3961742,8.38461538 21.4615385,8.38461538 Z"
          />
        </g>
      </svg>

      <svg xmlns="http://www.w3.org/2000/svg" width="37" height="19" viewBox="0 0 37 19">
        <g fill={rate === 'good' ? GOOD_COLOUR : '#ffffff'}>
          <path
            fillOpacity={rate === 'good' ? '1' : '.15'}
            d="M0,0 L34,0 C35.6568542,-3.04359188e-16 37,1.34314575 37,3 L37,16 C37,17.6568542 35.6568542,19 34,19 L0,19 L0,0 Z"
          />
          <path
            fillOpacity={rate === 'good' ? '0.9' : '.5'}
            fill={rate === 'good' ? '#000000' : '#ffffff'}
            d="M12,10.2697802 L14,10.2697802 C14,10.5631874 14.4203053,11.1361897 15.1667298,11.6352552 C16.0863758,12.2501381 17.2801266,12.6243284 18.5,12.6243284 C19.7198734,12.6243284 20.9136242,12.2501381 21.8332702,11.6352552 C22.5796947,11.1361897 23,10.5631874 23,10.2697802 L25,10.2697802 C25,12.4737217 21.7834573,14.6243284 18.5,14.6243284 C15.2165427,14.6243284 12,12.4737217 12,10.2697802 Z M15.5384615,8.38461538 C14.6038258,8.38461538 13.8461538,7.62694342 13.8461538,6.69230769 C13.8461538,5.75767196 14.6038258,5 15.5384615,5 C16.4730973,5 17.2307692,5.75767196 17.2307692,6.69230769 C17.2307692,7.62694342 16.4730973,8.38461538 15.5384615,8.38461538 Z M21.4615385,8.38461538 C20.5269027,8.38461538 19.7692308,7.62694342 19.7692308,6.69230769 C19.7692308,5.75767196 20.5269027,5 21.4615385,5 C22.3961742,5 23.1538462,5.75767196 23.1538462,6.69230769 C23.1538462,7.62694342 22.3961742,8.38461538 21.4615385,8.38461538 Z"
          />
        </g>
      </svg>
    </div>
  );
}

const indicator = (
  <svg width="19px" height="19px" viewBox="0 0 19 19" version="1.1" xmlns="http://www.w3.org/2000/svg">
    <g id="Indicator" stroke="none" strokeWidth="1" fill="none" fillRule="evenodd">
      <rect id="Rectangle" fill="#FF6301" fillRule="nonzero" x="0" y="0" width="19" height="19" rx="3" />
      <path
        d="M8.97,13.172 C10.048,13.172 10.928,14.052 10.928,15.064 C10.928,16.12 10.048,17.022 8.97,17.022 C7.914,17.022 7.078,16.12 7.078,15.064 C7.078,14.052 7.914,13.172 8.97,13.172 Z M7.1,2.6 L10.862,2.6 L10.444,11.456 L7.518,11.456 L7.1,2.6 Z"
        id="!-copy"
        fill="#FFFFFF"
      />
    </g>
  </svg>
);

export default class Hud extends Component {
  constructor(props) {
    super(props);

    this.state = {
      isMessageVisible: false
    };
  }

  componentWillReceiveProps(nextProps) {
    if (nextProps.pickRate !== this.props.pickRate && nextProps.story.get('scene') !== 'characters') {
      const messages = {
        bad: 'Your pick rate is very low!',
        bad2medium: 'Your pick rate is still below target.',
        good2medium: 'Your pick rate has gone down.',
        good: "Great! You're on target."
      };

      let message;
      switch (nextProps.pickRate) {
        case 1:
          message = messages.bad;
          break;
        case 2:
          message = this.props.pickRate === 1 ? messages.bad2medium : messages.good2medium;
          break;
        case 3:
          message = messages.good;
      }

      // Make sure to retrigger the message animation
      this.setState(
        s => ({ isMessageVisible: false }),
        () => {
          this.setState(s => ({ isMessageVisible: true, message }));
        }
      );

      clearTimeout(this.isMessageVisibleTimeout);
      this.isMessageVisibleTimeout = setTimeout(() => {
        this.setState(s => ({ isMessageVisible: false }));
      }, 7000);
    }
  }

  render() {
    const { time, isTimerVisible, isPickRateVisible, pickRate, seconds } = this.props;

    let rate;
    switch (pickRate) {
      case 1:
        rate = 'bad';
        break;
      case 2:
        rate = 'medium';
        break;
      case 3:
        rate = 'good';
        break;
    }

    let timeColour;
    let showIndicator = false;
    if (seconds > 5) {
      timeColour = colours['good'];
    } else if (seconds <= 0) {
      timeColour = colours['bad'];
      showIndicator = true;
    } else {
      timeColour = colours['medium'];
    }

    return (
      <div className={styles.base}>
        <div className={`${styles.logo} ${isPickRateVisible ? styles.pickRateVisible : ''}`}>
          <a href="https://www.abc.net.au/news">
            <svg xmlns="http://www.w3.org/2000/svg" width="80" height="18" viewBox="0 0 80 18">
              <path
                fill="#FFF"
                fillRule="evenodd"
                d="M1.34890606,16.5914087 C0.422199314,15.9194657 0.15746784,15.0988861 0.122873916,13.6822942 L0.122873916,3.74064523 C0.235743924,2.09889965 1.27766602,1.20590733 2.21052931,0.796057275 C2.65497329,0.646834329 2.84230819,0.610188223 3.32632996,0.610188223 C4.14603008,0.57266261 5.15042656,0.90716827 5.85930885,1.72716155 C6.15511622,2.02619378 6.75318068,3.47679326 6.75318068,3.47679326 L10.1809109,12.6025533 C10.3855428,13.1413976 10.821778,13.4298758 11.2533226,13.4498113 C11.6872125,13.4703331 12.1161185,13.2196737 12.3016944,12.678484 L13.3864191,9.80924047 L15.2078772,14.5767523 C14.31166,16.1800928 13.4547275,16.5914087 12.4512105,16.9625605 C12.0662798,17.083346 11.6564297,17.1487227 11.2451138,17.1625016 C11.1524725,17.1654333 11.0598311,17.1645538 10.9674829,17.1625016 C10.9487201,17.1622085 10.9296641,17.1633811 10.910315,17.1625016 C10.1642003,17.1361164 9.43039864,16.9402796 8.83937023,16.5914087 C8.50251922,16.3653755 7.60630204,15.7696564 7.01351462,14.3172979 L3.39991535,4.25867459 L3.39991535,13.4216671 L3.45503109,13.2674603 L4.77810212,9.54949287 L6.49196723,14.3917628 C6.23456498,15.5093225 5.44916562,16.4410131 4.51952719,16.8883887 C4.17270844,17.0487521 3.80566104,17.1337711 3.43773413,17.1560519 C2.69543059,17.2017862 1.94697051,16.9883593 1.34890606,16.5914087 Z M10.0695067,5.07808153 L9.02494612,7.9490841 L7.20143585,3.14492612 C8.09472135,1.53982665 8.94989489,1.16984756 9.95575722,0.796057275 C10.3389289,0.676151214 10.7461404,0.612533573 11.1554042,0.594063936 C12.0164411,0.555658816 12.8868594,0.739475687 13.5705292,1.16984756 C13.9062075,1.39060371 14.7980272,1.95055622 15.3922804,3.40408738 L18.9671814,13.4975978 L18.9671814,4.29649337 L18.8806966,4.54539373 L17.6276929,8.17277194 L15.9170527,3.33020883 C16.1395678,2.24900211 16.9607338,1.31760466 17.8903722,0.869935826 C18.1964405,0.72833527 18.5148219,0.645368485 18.8352554,0.611067729 C19.6098075,0.528687282 20.3969659,0.736543998 21.0557163,1.13232195 C21.9891659,1.83915205 22.2489135,2.62103338 22.2835075,4.07368504 L22.2835075,13.9824991 C22.1738623,15.6570796 21.0941214,16.5518309 20.1606718,16.9625605 C19.7537534,17.1106107 19.5643664,17.14755 19.0832763,17.14755 C18.2644557,17.14755 17.2207745,16.8493973 16.5502974,15.9924647 C16.2495061,15.6969505 15.6564256,14.2416603 15.6564256,14.2416603 L12.2289885,5.15342593 C12.0158547,4.6406736 11.6092295,4.35776566 11.1985,4.3140835 C10.7443814,4.26659015 10.2838132,4.51197248 10.0695067,5.07808153 Z M26.8012891,1.59208365 L29.8756584,1.59208365 L35.7525142,12.237349 L35.7525142,1.59208365 L38.3667738,1.59208365 L38.3667738,16.2319378 L35.16692,16.2319378 L29.4155487,5.92129765 L29.4155487,16.2319378 L26.8012891,16.2319378 L26.8012891,1.59208365 Z M40.2138169,1.59208365 L49.1232139,1.59208365 L48.8095027,3.76714769 L42.8071625,3.76714769 L42.8071625,7.55259568 L48.6003619,7.55259568 L48.6003619,9.79040195 L42.8071625,9.79040195 L42.8071625,13.9941315 L49.165042,13.9941315 L49.165042,16.2319378 L40.2138169,16.2319378 L40.2138169,1.59208365 Z M49.4017012,1.59208365 L52.1623594,1.59208365 L54.8393613,13.1993966 L54.9230176,13.1993966 L57.6418476,1.59208365 L60.1515369,1.59208365 L62.9749373,13.1993966 L63.0585936,13.1993966 L65.6310252,1.59208365 L68.4125974,1.59208365 L64.6898917,16.2319378 L61.5946082,16.2319378 L58.9176063,6.02586803 L56.2615185,16.2319378 L53.145321,16.2319378 L49.4017012,1.59208365 Z M79.2945219,2.90967052 L78.3115603,4.91742194 C78.3115603,4.91742194 76.05284,3.70440545 74.1496589,3.70440545 C72.6856735,3.70440545 71.723626,4.14360108 71.723626,5.33570348 C71.723626,8.13818984 79.5454909,6.86243113 79.5454909,11.8190674 C79.5245768,14.8306946 77.2240283,16.3574222 74.170573,16.3574222 C70.6151799,16.3574222 68.5446862,14.5588116 68.5446862,14.5588116 L69.841359,12.5928883 C69.841359,12.5928883 71.6608837,14.14053 74.0450885,14.14053 C75.8227851,14.14053 76.889403,13.3667092 76.889403,12.1118645 C76.889403,9.20480778 69.1093663,10.2505117 69.1093663,5.46118795 C69.1093663,2.78418605 71.1798599,1.48751326 74.1078308,1.48751326 C76.868489,1.48751326 79.2945219,2.90967052 79.2945219,2.90967052 Z"
                opacity=".6"
              />
            </svg>
          </a>
        </div>
        <div
          className={`${styles.content} ${isPickRateVisible ? styles.pickRateVisible : ''} ${
            isTimerVisible ? styles.timerVisible : ''
          }`}>
          <div className={styles.pickRate}>
            <div className={styles.label}>Pick rate</div>
            {svg(rate)}
          </div>
          <div className={styles.timer}>
            <div className={styles.label}>Time to pick</div>
            <div className={styles.time} style={{ color: timeColour }}>
              {showIndicator && <div className={styles.flash}>{indicator}</div>}
              {time}
            </div>
          </div>

          {this.state.isMessageVisible && (
            <div
              className={styles.message}
              style={{
                background: colours[rate],
                color: textColours[rate],
                top: isTimerVisible || window.innerWidth < 440 ? '70px' : '15px'
              }}
              role="alert">
              {this.state.message}
            </div>
          )}
        </div>
      </div>
    );
  }
}

Hud.defaultProps = {
  time: ''
};
